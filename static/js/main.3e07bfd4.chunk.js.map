{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.compoment.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monsterData","monster","className","alt","src","id","name","email","CardList","monstersData","monsters","map","SearchBox","propsData","placeholder","handleChange","type","onChange","App","props","e","setState","searchField","target","value","state","fetch","then","res","json","users","catch","console","error","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAeeA,G,MAXF,SAACC,GAAiB,IACrBC,EAAYD,EAAZC,QACR,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,aCMHC,G,MAXE,SAACC,GAAkB,IAC1BC,EAAaD,EAAbC,SACR,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAASC,KAAI,SAACV,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCAZO,G,MAPG,SAACC,GAAe,IACxBC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,aACrB,OACE,uBAAOb,UAAU,SAASc,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCuCjEG,G,wDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJE,E,gEAQE,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEX,SAAUoB,OAE3BC,MAAMC,QAAQC,S,+BAOT,IAAD,EAC2BC,KAAKT,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZa,EAAmBzB,EAAS0B,QAAO,SAACnC,GAAD,OACvCA,EAAQK,KAAK+B,cAAcC,SAAShB,EAAYiB,wBAElD,OACE,sBAAKrC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAcmB,KAAKnB,eAC5D,cAAC,EAAD,CAAUL,SAAUyB,W,GA/BVK,cCIHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e07bfd4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nconst Card = (monsterData) => {\n  const { monster } = monsterData;\n  return (\n    <div className=\"card-container\">\n      <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=240x240`} />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card/card.component';\n\nimport './card-list.styles.css';\n\nconst CardList = (monstersData) => {\n  const { monsters } = monstersData;\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\nimport './search-box.styles.css';\n\nconst SearchBox = (propsData) => {\n  const { placeholder, handleChange } = propsData;\n  return (\n    <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\n  );\n};\n\nexport default SearchBox;\n","// Library componentes\nimport React, { Component } from 'react';\n// Custom components\nimport CardList from './components/card-list/card-list.compoment';\nimport SearchBox from './components/search-box/search-box.component';\n// Utilities\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((users) => {\n        this.setState({ monsters: users });\n      })\n      .catch(console.error);\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}